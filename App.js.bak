import React, { useState, useEffect } from "react";
import {
  Button,
  View,
  Text,
  TextInput,
  StyleSheet,
  TouchableOpacity,
  Image,
  Linking,
  SafeAreaView,
  ScrollView
} from "react-native";
import {
  NavigationContainer,
  StackActions,
  useFocusEffect
} from "@react-navigation/native";

import { createStackNavigator } from "@react-navigation/stack";
//import { WebView } from "react-native-webview";
import axios from "axios";
import { set } from "react-native-reanimated";

const Separator = () => <View style={styles.separator} />;

function HomeScreen({ navigation }) {
  useEffect(() => {
    console.log("마운트 될떄만 Fetch합니다.");
    goFetch();
  }, []);

  const [item, setItem] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  const API = "6f6f2e9c080b4c369c466d5a57ccd79c";
  const result = 20;

  var finalURL = `https://openapi.gg.go.kr/Ggculturevent?KEY=${API}&Type=json&pindex=1&pSize=10`;

  const handlePress = () => {
    navigation.navigate("Details", {
      itemId: 86,
      otherParam: "anything you want here"
    });
  };

  const goFetch = async () => {
    console.log("1111");
    const {
      data: {
        Ggculturevent: [, items]
      }
    } = await axios.get(finalURL);
    console.log(items.row);
    setItem(items.row);
    setIsLoading(false);

    //console.log(items[0].snippet.title);
    //console.log(items[1].snippet.title);
    //console.log(items[2].snippet.title);
    //console.log(items[3].snippet.title);
    //console.log(items[4].snippet.title);
    /*
    axios.get(finalURL).then(res => {
      console.log(res);
      //const { regionCode } = res;
      console.log(res.data.items[0].snippet.title);
      console.log(res.data.items[1].snippet.title);
      console.log(res.data.items[2].snippet.title);
      console.log(res.data.items[3].snippet.title);
      console.log(res.data.items[4].snippet.title);
    });
    */
  };
  if (isLoading) {
    return <Text> Loading...</Text>;
  } else {
    return (
      <View style={styles.container}>
        <ScrollView style={styles.scrollView}>
          {item.map(v => (
            <View>
              <Text>{v.INST_NM}</Text>
              <View style={styles.separator}></View>
              <Image
                style={{ height: 180, resizeMode: "contain" }}
                source={{ uri: v.IMAGE_URL }}
              />
              <View style={styles.separator}></View>
              <Text>{v.TITLE}</Text>
              <View style={styles.separator}></View>
            </View>
          ))}
        </ScrollView>
        <TouchableOpacity style={styles.button} onPress={handlePress}>
          <Text style={styles.btnTitle}>Go to Details</Text>
        </TouchableOpacity>
        <Button title="Fetch" onPress={goFetch}></Button>
      </View>
    );
  }
}

function DetailScreen() {
  return (
    <View>
      <Text>상세화면 입니다.</Text>
    </View>
  );
}
/*
const AppNavigator = createStackNavigator({
  Home: {
    screen: HomeScreen
  }
});
*/
const Stack = createStackNavigator();

function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Home">
        <Stack.Screen name="Home" component={HomeScreen} />
        <Stack.Screen name="Details" component={DetailScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "center"
  },
  title: {
    width: "100%",
    height: 70,
    backgroundColor: "white",
    alignItems: "center",
    justifyContent: "center"
  },
  titText: {
    fontSize: 20,
    fontWeight: "bold"
  },
  content: {
    width: "100%",
    height: "70%",
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "yellow"
  },
  nameInput: {
    justifyContent: "flex-end",
    paddingHorizontal: 10,
    paddingVertical: 10,
    borderWidth: 1,
    borderRadius: 3,
    backgroundColor: "skyblue",
    width: "80%",
    height: "10%"
  },
  button: {
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "#DDDDDD",
    borderRadius: 3,
    padding: 5,
    height: "10%"
  },
  btnTitle: {
    fontSize: 15
  },
  separator: {
    marginVertical: 5
    //borderBottomColor: "#737373",
    //borderBottomWidth: StyleSheet.hairlineWidth
  },
  scrollView: {
    backgroundColor: "pink",
    marginHorizontal: 20,
    height: "50%"
  }
});

//export default createAppContainer(AppNavigator);
export default App;
